CREATE TABLE CATEGORIE(CATEGORIE CHAR(25) PRIMARY KEY);
INSERT INTO CATEGORIE  VALUES ('sport'), ('Habillement'), ('Meuble'), ('Musique'), ('Electro ménager');	 
CREATE TABLE ETAT (ETAT CHAR(10) PRIMARY KEY);
INSERT INTO ETAT  VALUES ('Tres bon'), ('Bon'), ('Assez bon');	
CREATE TABLE PRODUIT
	(ID INT  PRIMARY KEY,
	 NOM CHAR(20) NOT NULL,
	 DESCRIPTION TEXT,
	 PRIX FLOAT NOT NULL,
	 LONGUEUR FLOAT,
	 LARGEUR FLOAT,
	 PROFONDEUR FLOAT,
	 TAILLE FLOAT,
	 MARQUE CHAR(25),
	 CATEGORIE CHAR(25) NOT NULL,
	 ETAT CHAR(10),
	 QUANTITE INT,
	 FOREIGN KEY (CATEGORIE) REFERENCES CATEGORIE(CATEGORIE)
	 ON DELETE CASCADE ON UPDATE CASCADE,
	 FOREIGN KEY (ETAT) REFERENCES ETAT(ETAT) ON DELETE CASCADE
	 ON UPDATE CASCADE
	 );
CREATE TABLE ADRESSE
	(ID INT  PRIMARY KEY,
	 NUMERO_APPART INT,
	 RUE CHAR(25),
	 VILLE CHAR(25) NOT NULL,
	 PROVINCE CHAR(25),
	 PAYS CHAR(25),
	 CODE_POSTAL CHAR(7)	 
	 );
	 
INSERT INTO ADRESSE  VALUES (0,0101, 'Robin des bois', 'Montréal', 'Québec', 'Canada', 'H1H R2R'),
								(1,2011, 'Belle villes', 'Longueil', 'Québec', 'Canada', 'H1H R2R'),
								(2,0333, 'Des ruelles', 'Laval', 'Québec', 'Canada', 'H1H R2R');	
	 
	 	 
CREATE TABLE INTERVENANT
	(ID SERIAL  PRIMARY KEY,
	 ADRESSE_ID INT,
	 NOM CHAR(25) NOT NULL,
	 EMAIL CHAR(25),
	 NUM_TEL TEXT,
	 PROPOSITION FLOAT NOT NULL; /* ceci sera le prix proposé de vente du vendeur ou l'offre d'achat d'un acheteur */
	 FOREIGN KEY (ADRESSE_ID) REFERENCES ADRESSE(ID)
	 ON DELETE CASCADE ON UPDATE CASCADE
	 );
ALTER TABLE INTERVENANT
  ADD CONSTRAINT numerotel_check CHECK (NUM_TEL ~ '^[0-9]{10,} || [0-9]{3,} [0-9]{3,}[0-9]{4,}$'::text);	
  
INSERT INTO INTERVENANT VALUES(0,0, 'BOB', 'BOB@MAIL','5141112222' ); 
INSERT INTO INTERVENANT VALUES(0,0, 'Toto', 'TOTO@MAIL','5142223333' );
 	
CREATE TABLE ANNONCE
	(ID INT  PRIMARY KEY,
	 PROD_ID INT NOT NULL,
	 ACHETEUR_ID INT,
	 VENDEUR_ID INT NOT NULL,
	 TITRE CHAR(100),
	 DESCRIPTION TEXT,
	 PRIX_ESTIME FLOAT NOT NULL,
	 DATE_PUB CHAR(10) NOT NULL,
	 DATE_VENTE CHAR(10),
	 ETAT_ANNONCE CHAR(10), /* peut valoir soit "DISPONIBLE" ou "TERMINEE" */
	 FOREIGN KEY (PROD_ID) REFERENCES PRODUIT(ID)
	 ON DELETE CASCADE ON UPDATE CASCADE,
	 FOREIGN KEY (ACHETEUR_ID) REFERENCES INTERVENANT(ID)
	 ON DELETE CASCADE ON UPDATE CASCADE,
	 FOREIGN KEY (PROD_ID) REFERENCES PRODUIT(ID)
	 ON DELETE CASCADE ON UPDATE CASCADE
	 );
CREATE OR REPLACE FUNCTION checkName(id INTEGER)
	RETURNS BOOLEAN AS
	$$
	BEGIN
		IF VENDEUR_NOM IN (SELECT NOM FROM INTERVENANT)
			THEN RETURN true;
		ELSE RETURN false;
			END IF;
	END;
	$$ LANGUAGE PLpgSQL;
  

	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 